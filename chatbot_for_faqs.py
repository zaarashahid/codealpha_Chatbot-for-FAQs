# -*- coding: utf-8 -*-
"""Chatbot for FAQs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ARYrMz9ZR6MvIewWv4Lu1hNoEF5wz4Gr
"""

# Install dependencies
!pip install nltk scikit-learn ipywidgets

import nltk
import ipywidgets as widgets
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from IPython.display import display, clear_output

nltk.download('punkt')

# ----------------------
# Step 1: FAQ Dataset
# ----------------------
faqs = {
    "What is your return policy?": "Our return policy allows returns within 30 days of purchase with a receipt.",
    "How can I track my order?": "You can track your order using the tracking number sent to your email.",
    "Do you offer international shipping?": "Yes, we ship to most countries worldwide.",
    "How do I reset my password?": "Click on 'Forgot Password' at login and follow the instructions.",
    "What payment methods do you accept?": "We accept credit cards, debit cards, and PayPal.",
    "Can I cancel my order?": "Yes, orders can be canceled within 24 hours of placing them.",
    "Do you have a physical store?": "Currently, we are an online-only store.",
}

questions = list(faqs.keys())
answers = list(faqs.values())

# ----------------------
# Step 2: Vectorize FAQs
# ----------------------
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(questions)

# ----------------------
# Step 3: Chatbot Function
# ----------------------
def get_response(user_query):
    user_vec = vectorizer.transform([user_query])
    similarity = cosine_similarity(user_vec, X)
    idx = similarity.argmax()
    return answers[idx]

# ----------------------
# Step 4: Simple Chat UI
# ----------------------
chat_history = widgets.Output(layout={"border": "1px solid gray", "padding": "10px", "height": "250px", "overflow": "auto"})
user_input = widgets.Text(placeholder="Type your question here...", layout=widgets.Layout(width="100%"))
send_button = widgets.Button(description="Send", button_style="success")

# Chat handling
def handle_chat(_):
    query = user_input.value.strip()
    if query:
        with chat_history:
            print("You:", query)
            response = get_response(query)
            print("Bot:", response, "\n")
    user_input.value = ""

send_button.on_click(handle_chat)

# Display chatbot UI
display(widgets.VBox([
    chat_history,
    widgets.HBox([user_input, send_button])
]))